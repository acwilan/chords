---
import App from '../../layouts/App.astro';
import { getEntryBySlug, getCollection } from 'astro:content';

export async function getStaticPaths() {
  const songs = await getCollection('songs');
  return songs.map((song) => ({ params: { slug: song.slug } }));
}

const slug = Astro.params.slug;
const song = await getEntryBySlug('songs', slug);
if (!song) {
  throw new Error(`Song not found: ${slug}`);
}
const { Content } = await song.render();
const base = import.meta.env.BASE_URL.endsWith('/')
  ? import.meta.env.BASE_URL
  : `${import.meta.env.BASE_URL}/`;
const pdf =
  song.data.pdf &&
  (song.data.pdf.startsWith('http')
    ? song.data.pdf
    : `${base}${song.data.pdf.replace(/^\//, '')}`);
---
<App>
  <Fragment slot="head">
    <title>{song.data.title}</title>
  </Fragment>
  <h1 class="mb-4 text-2xl font-bold">{song.data.title}</h1>
  {song.data.key && <p>Key: {song.data.key}</p>}
  {song.data.bpm && <p>BPM: {song.data.bpm}</p>}
  {song.data.capo && <p>Capo: {song.data.capo}</p>}
  <Content />
  {pdf && (
    <>
      <p class="mt-8"><a href={pdf}>Download PDF</a></p>
      <object data={pdf} type="application/pdf" width="100%" height="600">
        <p>
          <a href={pdf}>Download PDF</a>
        </p>
      </object>
    </>
  )}
  <p class="mt-8"><a href={`${base}songs/`}>Go back</a></p>
</App>
